CMAKE_MINIMUM_REQUIRED(VERSION 3.16)

PROJECT(pcscDemoCode C)

IF(NOT CMAKE_BUILD_TYPE)
    SET(CMAKE_BUILD_TYPE Release)
ENDIF()

SET(CMAKE_C_STANDARD 99)
SET(PROJECT_DESCRIPTION "Demo Code for PC/SC")
SET(PROJECT_URL "https://github.com/hanhsuan/pcscDemoCode")
SET(PROJECT_ISSUES_URL "${PROJECT_URL}/issues")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/output/bin)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/output/lib)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/output/lib)

# Based on: https://gitlab.kitware.com/cmake/cmake/issues/19460
IF(DEFINED CMAKE_OSX_SYSROOT)
    SET(CC "CC=${CMAKE_C_COMPILER} ${CMAKE_C_SYSROOT_FLAG} ${CMAKE_OSX_SYSROOT}")
ELSE()
    SET(CC "CC=${CMAKE_C_COMPILER}")
ENDIF()

IF("${CMAKE_C_COMPILER_ID}" STREQUAL "Clang")
    SET(CMAKE_COMPILER_IS_CLANG ON)
ENDIF()

IF(MSVC)
    ADD_COMPILE_OPTIONS(/W4)
    ADD_COMPILE_OPTIONS(/WX)
    ADD_COMPILE_OPTIONS(/Zc:preprocessor)
    ADD_COMPILE_DEFINITIONS(_CRT_SECURE_NO_WARNINGS)
ELSE()
    ADD_COMPILE_OPTIONS(-pedantic)
    ADD_COMPILE_OPTIONS(-Wall -Wextra -Wpedantic)
    ADD_COMPILE_OPTIONS(-Werror)
ENDIF()

SET(DEMO_NAME "demo")

# Include extra modules
SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/)

FIND_PACKAGE(PCSC REQUIRED)

ADD_EXECUTABLE(${DEMO_NAME} demo.c)

TARGET_INCLUDE_DIRECTORIES(${DEMO_NAME} PUBLIC ${PCSC_INCLUDE_DIR}/PCSC)
TARGET_INCLUDE_DIRECTORIES(${DEMO_NAME} PUBLIC ${PCSC_INCLUDE_DIR})

TARGET_LINK_LIBRARIES(${DEMO_NAME} PUBLIC ${PCSC_LIBRARIES})

